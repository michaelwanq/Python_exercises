练习 9-1：餐馆
创建一个名为 Restaurant 的类，为其方法__init__()设置属性restaurant_name 和 cuisine_type。
创建一个名为 describe_restaurant()的方法和一个名为 open_restaurant()的方法，
前者打印前述两项信息，而后者打印一条消息，指出餐馆正在营业。
根据这个类创建一个名为 restaurant 的实例，分别打印其两个属性，再调用前述两个方法。

练习 9-2：三家餐馆
根据为完成练习 9-1 而编写的类创建三个实例，并对每个实例调用方法 describe_restaurant()。

练习 9-3：用户
创建一个名为 User 的类，其中包含属性 first_name 和 last_name，以及用户简介通常会存储的其他几个属性。
在类 User 中定义一个名为 describe_user()的方法，用于打印用户信息摘要。
再定义一个名为 greet_user()的方法，用于向用户发出个性化的问候。
创建多个表示不同用户的实例，并对每个实例调用上述两个方法。

练习 9-4：就餐人数
在为完成练习 9-1 而编写的程序中，添加一个名为 number_ served 的属性，并将其默认值设置为 0。
根据这个类创建一个名为 restaurant 的实例。
打印有多少人在这家餐馆就餐过，然后修改这个值并再次打印它。
添加一个名为 set_number_served()的方法，让你能够设置就餐人数。
调用这个方法并向它传递一个值，然后再次打印这个值。
添加一个名为 increment_number_served()的方法，让你能够将就餐人数递增。
调用这个方法并向它传递一个这样的值：你认为这家餐馆每天可能接待的就餐人数。

练习 9-5：尝试登录次数
在为完成练习 9-3 而编写的 User 类中，添加一个名为login_attempts 的属性。
编写一个名为 increment_login_attempts()的方法，将属性login_attempts 的值加 1。
再编写一个名为 reset_login_attempts()的方法，将属性login_attempts 的值重置为 0。
根据 User 类创建一个实例，再调用方法 increment_login_attempts()多次。打印属性 login_attempts 的值，确认它被正确地递增。
然后，调用方法 reset_login_attempts()，并再次打印属性 login_attempts 的值，确认它被重置为 0。

练习 9-6：冰激凌小店
冰激凌小店是一种特殊的餐馆。编写一个名为 IceCreamStand的类，让它继承为完成练习 9-1 或练习 9-4 而编写的 Restaurant 类。
这两个版本的Restaurant 类都可以，挑选你更喜欢的那个即可。
添加一个名为 flavors 的属性，用于存储一个由各种口味的冰激凌组成的列表。
编写一个显示这些冰激凌的方法。创建一个IceCreamStand 实例，并调用这个方法。

练习 9-7：管理员
管理员是一种特殊的用户。编写一个名为 Admin 的类，让它继承为完成练习 9-3 或练习 9-5 而编写的 User 类。
添加一个名为 privileges 的属性，用于存储一个由字符串（如"can add post"、"can delete post"、"can ban user"等）组成的列表。
编写一个名为 show_privileges()的方法，显示管理员的权限。创建一个 Admin实例，并调用这个方法。

练习 9-8：权限
编写一个名为 Privileges 的类，它只有一个属性 privileges，其中存储了练习 9-7 所述的字符串列表。
将方法 show_privileges()移到这个类中。在 Admin类中，将一个 Privileges 实例用作其属性。
创建一个 Admin 实例，并使用方法show_privileges()来显示其权限。

练习 9-9：电瓶升级
在本节最后一个 electric_car.py 版本中，给 Battery 类添加一个名为 upgrade_battery()的方法。
该方法检查电瓶容量，如果不是 100，就将其设置为100。
创建一辆电瓶容量为默认值的电动汽车，调用方法 get_range()，然后对电瓶进行升级，并再次调用 get_range()。
你将看到这辆汽车的续航里程增加了。

练习 9-10：导入
Restaurant 类 将最新的 Restaurant 类存储在一个模块中。
在另一个文件中，导入 Restaurant 类，创建一个 Restaurant 实例并调用 Restaurant 的一个方法，以确认 import 语句正确无误。

练习 9-11：导入
Admin 类 以为完成练习 9-8 而做的工作为基础。
将 User 类、Privileges 类和 Admin 类存储在一个模块中，再创建一个文件，
在其中创建一个 Admin实例并对其调用方法 show_privileges()，以确认一切都能正确运行。

练习 9-12：多个模块
将 User 类存储在一个模块中，并将 Privileges 类和 Admin类存储在另一个模块中。
再创建一个文件，在其中创建一个 Admin 实例并对其调用方法show_privileges()，以确认一切依然能够正确运行。

练习 9-13：骰子
创建一个 Die 类，它包含一个名为 sides 的属性，该属性的默认值为 6。
编写一个名为 roll_die()的方法，它打印位于 1 和骰子面数之间的随机数。
创建一个 6 面的骰子再掷 10 次。
创建一个 10 面的骰子和一个 20 面的骰子，再分别掷 10 次。

练习 9-14：彩票
创建一个列表或元组，其中包含 10 个数和 5 个字母。
从这个列表或元组中随机选择 4 个数或字母，并打印一条消息，指出只要彩票上是这 4 个数或字母，就中大奖了。

练习 9-15：彩票分析
可以使用一个循环来明白前述彩票大奖有多难中奖。
为此，创建一个名为 my_ticket 的列表或元组，再编写一个循环，不断地随机选择数或字母，直到中大奖为止。
请打印一条消息，报告执行循环多少次才中了大奖。

练习 9-16：Python Module of the Week
要了解 Python 标准库，一个很不错的资源是网站 Python Module of the Week。
请访问该网站并查看其中的目录，找一个你感兴趣的模块进行探索。
从模块 random 开始可能是个不错的选择。